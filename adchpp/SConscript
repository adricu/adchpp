# vim: set filetype=py

def getRevision(env):
	try:
		import bzrlib
		import bzrlib.builtins

		tree = bzrlib.builtins.WorkingTree.open_containing(env.Dir("#").abspath)[0]

		return tree.branch.revision_id_to_revno(tree.last_revision())
	except ImportError:
		return 0
 
Import('dev source_path')

env, target, sources = dev.prepare_build(source_path, 'adchpp', precompiled_header = 'adchpp')

env.Append(CPPPATH = ['.'])

env.Append(CPPDEFINES=["BUILDING_ADCHPP=1"])

if 'HAVE_DL' in env['CPPDEFINES']:
    env.Append(LIBS = ['dl'])

if 'HAVE_PTHREAD' in env['CPPDEFINES']:
    env.Append(LIBS = ['pthread'])

if 'HAVE_OPENSSL' in env['CPPDEFINES']:
	env.Append(LIBS = ['crypto', 'ssl'])

for i, source in enumerate(sources):
	if source.find("version.cpp") != -1:
		rev = ['ADCHPP_REVISION=' + str(getRevision(env))]
		sources[i] = env.SharedObject(source, CPPDEFINES=env['CPPDEFINES'] + rev)

headers=dev.get_sources(source_path, "*.h")

ret = env.SharedLibrary(target, sources)

Return('ret')
